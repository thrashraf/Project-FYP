{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\PROJECT\\\\Project-FYP\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\PROJECT\\\\Project-FYP\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nvar initialState = function initialState() {\n  return {\n    user: null,\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: \"\"\n  };\n};\n\nexport var userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState(),\n  reducers: {\n    login: function login(state, action) {\n      state.user = action.payload;\n    },\n    logout: function logout(state) {\n      state.user = null;\n    },\n    clearState: function clearState(state) {\n      return initialState();\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(signupUser.fulfilled, function (state, _ref) {\n      var payload = _ref.payload;\n      state.isFetching = false;\n      state.isSuccess = true;\n    });\n    builder.addCase(signupUser.pending, function (state) {\n      state.isFetching = true;\n    });\n    builder.addCase(signupUser.rejected, function (state, _ref2) {\n      var payload = _ref2.payload;\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    });\n    builder.addCase(loginUser.fulfilled, function (state, _ref3) {\n      var payload = _ref3.payload;\n      state.isFetching = false;\n      state.isSuccess = true;\n    });\n    builder.addCase(loginUser.pending, function (state) {\n      state.isFetching = true;\n    });\n    builder.addCase(loginUser.rejected, function (state, _ref4) {\n      var payload = _ref4.payload;\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    });\n  }\n});\nexport var signupUser = createAsyncThunk(\"users/signupUser\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref5, thunkAPI) {\n    var name, email, password, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = _ref5.name, email = _ref5.email, password = _ref5.password;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"/api/user/register\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: name,\n                email: email,\n                password: password\n              })\n            });\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n\n            if (!(response.status === 200)) {\n              _context.next = 12;\n              break;\n            }\n\n            console.log(\"data\", data);\n            _context.next = 13;\n            break;\n\n          case 12:\n            return _context.abrupt(\"return\", thunkAPI.rejectWithValue(data));\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"Error\", _context.t0.response.data);\n            return _context.abrupt(\"return\", thunkAPI.rejectWithValue(_context.t0.response.data));\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 15]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nexport var loginUser = createAsyncThunk(\"users/login\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref7, thunkAPI) {\n    var email, password, response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = _ref7.email, password = _ref7.password;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return fetch(\"api/user/login\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            });\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context2.sent;\n            console.log(\"response\", data);\n\n            if (!(response.status === 200)) {\n              _context2.next = 14;\n              break;\n            }\n\n            localStorage.setItem(\"token\", data.token);\n            return _context2.abrupt(\"return\", data);\n\n          case 14:\n            return _context2.abrupt(\"return\", thunkAPI.rejectWithValue(data));\n\n          case 15:\n            _context2.next = 21;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(\"Error\", _context2.t0.response.data);\n            thunkAPI.rejectWithValue(_context2.t0.response.data);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 17]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref8.apply(this, arguments);\n  };\n}());\nvar _userSlice$actions = userSlice.actions,\n    login = _userSlice$actions.login,\n    logout = _userSlice$actions.logout,\n    clearState = _userSlice$actions.clearState;\nexport { login, logout, clearState };\nexport var userSelector = function userSelector(state) {\n  return state.user;\n};\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/PROJECT/Project-FYP/frontend/src/features/user/User.tsx"],"names":["createAsyncThunk","createSlice","initialState","user","isFetching","isSuccess","isError","errorMessage","userSlice","name","reducers","login","state","action","payload","logout","clearState","extraReducers","builder","addCase","signupUser","fulfilled","pending","rejected","message","loginUser","thunkAPI","email","password","fetch","method","headers","Accept","body","JSON","stringify","response","json","data","status","console","log","rejectWithValue","localStorage","setItem","token","actions","userSelector","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/Store\";\r\n\r\n\r\n\r\ninterface loginUser{\r\n    email: string;\r\n    password: string;\r\n}\r\ninterface user {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst initialState = () => ({\r\n  user: null,\r\n  isFetching: false,\r\n  isSuccess: false,\r\n  isError: false,\r\n  errorMessage: \"\",\r\n});\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: initialState(),\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n    clearState: (state) => initialState(),\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(signupUser.fulfilled, (state, { payload }: any) => {\r\n      state.isFetching = false;\r\n      state.isSuccess = true;\r\n    });\r\n    builder.addCase(signupUser.pending, (state) => {\r\n      state.isFetching = true;\r\n    });\r\n    builder.addCase(signupUser.rejected, (state, { payload }: any) => {\r\n      state.isFetching = false;\r\n      state.isError = true;\r\n      state.errorMessage = payload.message;\r\n    });\r\n    builder.addCase(loginUser.fulfilled, (state, { payload }: any) => {\r\n        state.isFetching = false;\r\n        state.isSuccess = true;\r\n      });\r\n      builder.addCase(loginUser.pending, (state) => {\r\n        state.isFetching = true;\r\n      });\r\n      builder.addCase(loginUser.rejected, (state, { payload }: any) => {\r\n        state.isFetching = false;\r\n        state.isError = true;\r\n        state.errorMessage = payload.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const signupUser = createAsyncThunk(\r\n  \"users/signupUser\",\r\n  async ({ name, email, password }: user, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(\"/api/user/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n      let data = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"data\", data);\r\n      } else {\r\n        return thunkAPI.rejectWithValue(data);\r\n      }\r\n    } catch (e: any) {\r\n      console.log(\"Error\", e.response.data);\r\n      return thunkAPI.rejectWithValue(e.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const loginUser = createAsyncThunk(\r\n    \"users/login\",\r\n    async ({ email, password }:loginUser, thunkAPI) => {\r\n      try {\r\n        const response = await fetch(\r\n          \"api/user/login\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              email,\r\n              password,\r\n            }),\r\n          }\r\n        )\r\n        let data = await response.json()\r\n        console.log(\"response\", data)\r\n        if (response.status === 200) {\r\n          localStorage.setItem(\"token\", data.token)\r\n          return data\r\n        } else {\r\n          return thunkAPI.rejectWithValue(data)\r\n        }\r\n      } catch (e:any) {\r\n        console.log(\"Error\", e.response.data)\r\n        thunkAPI.rejectWithValue(e.response.data)\r\n      }\r\n    }\r\n  )\r\n\r\n\r\n\r\n\r\nexport const { login, logout, clearState } = userSlice.actions;\r\nexport const userSelector = (state: RootState) => state.user;\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}